{"ast":null,"code":"var _jsxFileName = \"D:\\\\Study\\\\ReactJS\\\\react-course\\\\textutils\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport React, { useState } from 'react';\nimport Alert from './components/Alert';\n// import About from './components/About';\n// import {\n//   BrowserRouter as Router,\n//   Routes,\n//   Route\n// } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [mode, setMode] = useState('light');\n  const [alert, setAlert] = useState(null);\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  };\n  const toggleMode = () => {\n    if (mode === 'light') {\n      setMode('dark');\n      document.body.style.backgroundColor = 'black';\n      showAlert(\"Dark Mode Enabled\", \"success\");\n      document.title = 'Textutils - Dark Mode';\n    } else {\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light Mode Enabled\", \"success\");\n      document.title = 'Textutils - Light Mode';\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      brand_name: \"Learning React\",\n      about: \"About Us\",\n      toggleMode: toggleMode,\n      mode: mode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Alert, {\n      alert: alert\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(TextForm, {\n      showAlert: showAlert,\n      alert: alert,\n      heading: \"Enter the text to analze\",\n      mode: mode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"yynMwYg97c38tJfP/35WTBv6oDs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Navbar","TextForm","React","useState","Alert","App","mode","setMode","alert","setAlert","showAlert","message","type","msg","setTimeout","toggleMode","document","body","style","backgroundColor","title"],"sources":["D:/Study/ReactJS/react-course/textutils/src/App.js"],"sourcesContent":["import './App.css';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport React, {useState} from 'react';\nimport Alert from './components/Alert';\n// import About from './components/About';\n// import {\n//   BrowserRouter as Router,\n//   Routes,\n//   Route\n// } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState('light');\n  const [alert, setAlert] = useState(null)\n\n  const showAlert = (message, type)=>{\n    setAlert({\n      msg: message,\n      type: type\n    })\n    setTimeout(() => {\n      setAlert(null)\n    }, 1500);\n  }\n\n  const toggleMode = ()=>{\n    if (mode === 'light'){\n      setMode('dark');\n      document.body.style.backgroundColor = 'black';\n      showAlert(\"Dark Mode Enabled\",\"success\");\n      document.title = 'Textutils - Dark Mode';\n      }\n    else {\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light Mode Enabled\",\"success\");\n      document.title = 'Textutils - Light Mode';\n    }\n  }\n  return (\n    <>\n        <Navbar brand_name=\"Learning React\" about=\"About Us\" toggleMode={toggleMode} mode={mode}/>\n        <Alert alert={alert}/>\n        <TextForm showAlert={showAlert} alert={alert} heading=\"Enter the text to analze\" mode={mode} />\n          \n    </>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAO,WAAW;AAClB,OAAOA,MAAM,MAAM,qBAAqB;AACxC,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,KAAK,IAAGC,QAAQ,QAAO,OAAO;AACrC,OAAOC,KAAK,MAAM,oBAAoB;AACtC;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAEA,SAASC,GAAG,GAAG;EAAA;EACb,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGJ,QAAQ,CAAC,OAAO,CAAC;EACzC,MAAM,CAACK,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMO,SAAS,GAAG,CAACC,OAAO,EAAEC,IAAI,KAAG;IACjCH,QAAQ,CAAC;MACPI,GAAG,EAAEF,OAAO;MACZC,IAAI,EAAEA;IACR,CAAC,CAAC;IACFE,UAAU,CAAC,MAAM;MACfL,QAAQ,CAAC,IAAI,CAAC;IAChB,CAAC,EAAE,IAAI,CAAC;EACV,CAAC;EAED,MAAMM,UAAU,GAAG,MAAI;IACrB,IAAIT,IAAI,KAAK,OAAO,EAAC;MACnBC,OAAO,CAAC,MAAM,CAAC;MACfS,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,GAAG,OAAO;MAC7CT,SAAS,CAAC,mBAAmB,EAAC,SAAS,CAAC;MACxCM,QAAQ,CAACI,KAAK,GAAG,uBAAuB;IACxC,CAAC,MACE;MACHb,OAAO,CAAC,OAAO,CAAC;MAChBS,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,GAAG,OAAO;MAC7CT,SAAS,CAAC,oBAAoB,EAAC,SAAS,CAAC;MACzCM,QAAQ,CAACI,KAAK,GAAG,wBAAwB;IAC3C;EACF,CAAC;EACD,oBACE;IAAA,wBACI,QAAC,MAAM;MAAC,UAAU,EAAC,gBAAgB;MAAC,KAAK,EAAC,UAAU;MAAC,UAAU,EAAEL,UAAW;MAAC,IAAI,EAAET;IAAK;MAAA;MAAA;MAAA;IAAA,QAAE,eAC1F,QAAC,KAAK;MAAC,KAAK,EAAEE;IAAM;MAAA;MAAA;MAAA;IAAA,QAAE,eACtB,QAAC,QAAQ;MAAC,SAAS,EAAEE,SAAU;MAAC,KAAK,EAAEF,KAAM;MAAC,OAAO,EAAC,0BAA0B;MAAC,IAAI,EAAEF;IAAK;MAAA;MAAA;MAAA;IAAA,QAAG;EAAA,gBAEhG;AAEP;AAAC,GApCQD,GAAG;AAAA,KAAHA,GAAG;AAsCZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}